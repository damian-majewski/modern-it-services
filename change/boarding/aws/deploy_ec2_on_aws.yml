---
- name: Deploy EC2 Instance on AWS
  hosts: localhost
  gather_facts: false
  vars_files:
    - ec2_vars.yml
  vars_prompt:
    - name: "os_family"
      prompt: "OS family (AmazonLinux2, CentOS, RedHat, Ubuntu, SLES):"
      private: no

  tasks:
    - name: Set AWS access and secret keys from environment variables
      set_fact:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      no_log: true

    - name: Set OS family filter
      set_fact:
        os_family_map:
          AmazonLinux2: "amzn2-ami-hvm-*"
          CentOS: "CentOS-*-x86_64-*-EBS-*"
          RedHat: "RHEL-*-x86_64-*-EBS-*"
          Ubuntu: "ubuntu-*-amd64-server-*-EBS-*"
          SLES: "SLES-*-x86_64-*-EBS-*"
        search_filter: "{{ os_family_map[os_family] }}"

    - name: Find the latest AMI
      amazon.aws.ec2_ami_info:
        filters:
          - name: "name"
            values: ["{{ search_filter }}"]
          - name: "owner-alias"
            values: ["amazon", "aws-marketplace"]
          - name: "virtualization-type"
            values: ["hvm"]
          - name: "root-device-type"
            values: ["ebs"]
          - name: "architecture"
            values: ["x86_64"]
          - name: "is-public"
            values: ["true"]
          - name: "product-code.type"
            values: ["devpay", "marketplace"]
          - name: "product-code.value"
            values: ["*free*"]
        sort: creationDate
        sort_order: descending
        sort_start: 0
        sort_end: 1
        region: "{{ aws_region }}"
      register: ami_info

    - name: Set the latest AMI ID
      set_fact:
        ami_id: "{{ ami_info.images[0].image_id }}"

    - name: Display new EC2 instance info
      debug:
        var: "{{ ami_info.images[0].image_id }}"

    - name: Deploy EC2 instance
      block:
        - name: Create security group
          amazon.aws.ec2_group:
            name: "{{ security_group }}"
            description: "Allow SSH"
            region: "{{ region }}"
            rules:
              - proto: "tcp"
                from_port: 22
                to_port: 22
                cidr_ip: "0.0.0.0/0"           
          register: security_group_result

        - name: Launch EC2 instance
          amazon.aws.ec2_instance:
            key_name: "{{ key_name }}"
            instance_type: "{{ instance_type }}"
            image: "{{ ami_id }}"
            wait: yes
            group_id: "{{ security_group_result.group_id }}"
            vpc_subnet_id: "{{ subnet_id }}"
            region: "{{ region }}"
            instance_tags:
              Name: "example-ec2-instance"          
          register: ec2_instances

    - name: Display new EC2 instance info
      debug:
        var: ec2_instances

