---
- name: Gather SAP HANA Server IP
  hosts: db_servers
  gather_facts: yes
  tasks:
    - name: Set SAP HANA server IP variable
      set_fact:
        sap_hana_server_ip: "{{ ansible_default_ipv4.address }}"
      run_once: true

- name: Network Latency Analysis and Performance Monitoring
  hosts: sap_app_servers
  gather_facts: yes
  vars:
    report_output: []
  tasks:
    
    - name: Install required packages (SLES)
      package:
        name:
          - apache2-utils
          - iftop
        state: present

    - name: Network latency Analysis
      block: 
    
        - name: Ping SAP HANA server
          command: ping -c 4 {{ sap_hana_server_ip }}
          register: ping_result
          changed_when: false
    
        - name: Display ping results
          debug:
            var: ping_result.stdout_lines
    
        - name: Traceroute to SAP HANA server
          command: traceroute {{ sap_hana_server_ip }}
          register: traceroute_result
          changed_when: false
    
        - name: Display traceroute results (Linux)
          debug:
            var: traceroute_result.stdout_lines
    
        - name: Gather system information
          setup:
            gather_subset: all
            filter: "ansible_hostname,ansible_os_family,ansible_system,ansible_interfaces,ansible_default_ipv4"
    
        - name: Display gathered system information
          debug:
            var: hostvars[inventory_hostname]

    - name: Bandwith monitoring with iftop
      block: 
    
        - name: Display application load testing results
          debug:
            var: ab_result.stdout_lines
    
        - name: Start bandwidth monitoring using iftop (SLES)
          shell: iftop -t -s 10 -n -N -L 10 -B > iftop_output.txt
          args:
            executable: /bin/bash
          async: 20
          poll: 0
    
        - name: Wait for iftop to finish
          async_status:
            jid: "{{ ansible_job_id }}"
          register: job_result
          until: job_result.finished
          retries: 30
    
        - name: Fetch iftop output file
          fetch:
            src: iftop_output.txt
            dest: ./iftop_output/{{ inventory_hostname }}_iftop_output.txt
            flat: yes

    - name: Analysing latency with niping
      block: 
    
        - name: Start niping server on HANA DB server
          command: niping -s -I 0
          become_user: hdbadm
          args:
            creates: /tmp/niping_server.pid
          delegate_to: "{{ sap_hana_server }}"
          async: 300
          poll: 0
          register: niping_server
    
        - name: Wait for niping server to start
          wait_for:
            path: /tmp/niping_server.pid
            state: present
          delegate_to: "{{ sap_hana_server }}"
    
        - name: Measuring RTT on client on SAP App server
          command: niping -c -H {{ sap_hana_server_ip }} -B 50000 -L 1000
          register: niping_client_rtt
    
        - name: Display RTT 
          debug:
            var: niping_client_rtt.stdout_lines

        - name: Measuring throughput on client on SAP App server up to 8000000
          command: niping -c -H {{ sap_hana_server_ip }} -B 100000
          register: niping_client_th
   
        - name: Display throughput test
          debug:
            var: niping_client_th.stdout_lines

        - name: Long LAN stability test
          command: niping -c -H {{ sap_hana_server_ip }} -B 10000 -D 100 -L 60
          register: niping_client_lan
   
        - name: Display Long LAN test
          debug:
            var: niping_client_lan.stdout_lines

        - name: Long WAN stability test           
          command: niping -c -H {{ sap_hana_server_ip }} -P -D 60
          register: niping_client_wan
   
        - name: Display Long WAN test
          debug:
            var: niping_client_wan.stdout_lines

        - name: Short throughput on client on SAP App server
          command: niping -c -H {{ sap_hana_server_ip }} -B 1000000 -L 100
          register: niping_client_sth
   
        - name: Display Short throughput
          debug:
            var: niping_client_sth.stdout_lines

        - name: Stop niping server on HANA DB server
          command: pkill -f "niping -s"
          become_user: hdbadm
          delegate_to: "{{ sap_hana_server }}"
          ignore_errors: yes

      become: yes
      become_user: bwhadm
      become_method: su


    - name: Update report_output
      set_fact:
        report_output: "{{ report_output + [
          {'Task': 'Ping SAP HANA server', 'Result': ping_result.stdout_lines},
          {'Task': 'Traceroute to SAP HANA server', 'Result': traceroute_result.stdout_lines},
          {'Task': 'Gathered system information', 'Result': hostvars[inventory_hostname]},
          {'Task': 'Application load testing results', 'Result': ab_result.stdout_lines},
          {'Task': 'Niping - RTT', 'Result': niping_client_rtt.stdout_lines},
          {'Task': 'Niping - Throughput', 'Result': niping_client_th.stdout_lines},
          {'Task': 'Niping - Long LAN stability test', 'Result': niping_client_lan.stdout_lines},
          {'Task': 'Niping - Long WAN stability test', 'Result': niping_client_wan.stdout_lines},
          {'Task': 'Niping - Short throughput', 'Result': niping_client_sth.stdout_lines}
        ] }}"
    
    - name: Create report file
      delegate_to: localhost
      copy:
        content: |
          {% for item in report_output %}
          Task: {{ item.Task }}
          Result:
          {% for line in item.Result %}
          {{ line }}
          {% endfor %}
          {% endfor %}
        dest: "./report_{{ inventory_hostname }}.txt"